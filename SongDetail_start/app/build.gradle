apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.android.songdetailstart"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    flavorDimensions "stage"
    productFlavors {
        dev {
            dimension "stage"
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            resConfigs "en", "xhdpi"
        }
        prod {
            dimension "stage"
        }
    }
//    android.variantFilter { variant ->
//        if(variant.buildType.name == 'release') {
//            variant.setIgnore(true)
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-fragment:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
}


//task installDev(type: Exec) {
//    dependsOn 'assembleDev'
////    commandLine 'adb',  '-s', 'emulator-5554', 'uninstall', "${android.defaultConfig.applicationId}.dev"
//    commandLine 'adb',  '-s', 'emulator-5554', 'install', '-r', '-t', "${projectDir}/build/outputs/apk/dev/debug/app-dev-debug.apk"
//}

task startDev(type: Exec) {
    dependsOn "installDevDebug"
    commandLine 'adb', '-s', 'emulator-5554', 'shell', 'am', 'start', '-n', "${android.defaultConfig.applicationId}.dev/${android.defaultConfig.applicationId}.MainActivity", '-a', 'android.intent.action.MAIN', '-c', 'android.intent.category.LAUNCHER'
}
gradle.taskGraph.whenReady { graph ->
    // give -Pnolint on the ./gradlew commandline to disable linting
    if (project.hasProperty('nolint')) {
        graph.allTasks.findAll { it.name ==~ /(?i)lint.*/ }*.enabled = false
    }
    // give -Pnorelease on the ./gradlew commandline to disable any task related to the release build
    if (project.hasProperty('norelease')) {
        graph.allTasks.findAll { it.name ==~ /(?i).*release.*/ }*.enabled = false
    }
}
